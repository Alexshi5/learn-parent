docker入门文档：https://blog.csdn.net/qq_33256688/article/details/80319673

一、使用Dockerfile构建springboot应用

Dockerfile内容如下：

FROM openjdk:8-jdk-alpine
VOLUME /tmp
ADD test-docker-0.0.1-SNAPSHOT.jar app.jar
ENTRYPOINT ["java","-Djava.security.egd=file:/dev/./urandom","-jar","/app.jar"]

这个 Dockerfile 文件很简单，构建 Jdk 基础环境，添加 Spring Boot Jar 到镜像中，具体内容如下:

FROM ，表示使用 Jdk8 环境 为基础镜像，如果镜像不是本地的会从 DockerHub 进行下载
VOLUME ，VOLUME 指向了一个/tmp的目录，由于 Spring Boot 使用内置的Tomcat容器，Tomcat 默认使用/tmp作为工作目录。
这个命令的效果是：在宿主机的/var/lib/docker目录下创建一个临时文件并把它链接到容器中的/tmp目录
ADD ，拷贝文件并且重命名
ENTRYPOINT ，为了缩短 Tomcat 的启动时间，添加java.security.egd的系统属性指向/dev/urandom作为 ENTRYPOINT

使用下面的命令来指定端口启动springboot镜像：
docker run -p 8080:8080 -t springboot/spring-boot-docker